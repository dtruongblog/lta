<div class="accordion" id="accordionPanelsStayOpenExample">    
    @foreach( var filter in Filters)
    {
      <div class="accordion-item">    
        <h2 class="accordion-header" id="panelsStayOpen-heading@(filter.Id.ToLower())">
          <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#panelsStayOpen-collapse@(filter.Id.ToLower())" aria-expanded="true" aria-controls="panelsStayOpen-collapse@(filter.Id.ToLower())">
            @filter.Title
          </button>
        </h2>
        <div id="panelsStayOpen-collapse@(filter.Id.ToLower())" class="accordion-collapse collapse @(filter.Active?"show":"")" aria-labelledby="panelsStayOpen-heading@(filter.Id.ToLower())">
          <div class="accordion-body">
                <BChecks Checkboxes="filter.Checkboxes" Identifer="@filter.Id" OnValueChangeEvent="OnValueChanged"></BChecks>
          </div>
        </div>
      </div>
    }    
</div>
<BBadges Badges="SelectedValue.ToList()" OnValueChangeEvent="OnBadgesValueChangeEvent"></BBadges>

@code{
    [Parameter]
    public IEnumerable<BFilter> Filters { get; set; }

    public List<string> SelectedValue { get; set; }

    string GetId(string Identifer,string CheckboxID) => $"{Identifer}-{CheckboxID}";

    protected void OnBadgesValueChangeEvent(string Badge)
    {
        foreach (var filter in Filters)
        {
            foreach (var checkbox in filter.Checkboxes)
            {
                if (GetId(filter.Id, checkbox.Id) == Badge)
                {
                    checkbox.Active = false;
                    OnValueChanged(GetId(filter.Id, checkbox.Id));
                }
            }

        }
    }

    protected override void OnParametersSet()
    {
        SelectedValue = new List<string>();
        foreach (var filter in Filters)
        {
            foreach (var checkbox in filter.Checkboxes)
            {
                if (checkbox.Active)
                {
                    SelectedValue.Add(GetId(filter.Id,checkbox.Id));
                }
            }
        }
    }
    protected void OnValueChanged(string value)
    {
        Console.WriteLine("Selected value:");
        foreach (var selectValue in SelectedValue)
        {
            Console.Write($"{selectValue} ");
        }
        if (SelectedValue.Contains(value))
        {
            SelectedValue.Remove(value);
        }
        else
        {
            SelectedValue.Add(value);
        }
        
    }

}
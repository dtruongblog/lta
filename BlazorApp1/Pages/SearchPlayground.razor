@page "/search-playground"
@using BlazorApp1.Models
<div class="row">
    <div class="col-4">
        <BFilters Filters="bFilters"></BFilters>
    </div>
    <div class="col-8">  
        <BSearch FilterModel="bFilterModel" FilterClassName="@bFilterClassName" OrderByModel="bOrderByModel" OrderByClassName="@bFilterClassName"></BSearch>
      </div>
</div>   

@code{
    public BFilter[] bFilters = new BFilter[]
        {
            new BFilter
            {                 
                    Id="home",
                    Title="Home",
                    Active=true,
                    Content=@"<p><strong>This is some placeholder content the Home tab's associated content.</strong> Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other <code>.nav</code>-powered navigation.</p>",
                    Checkboxes=GetCheckboxes().ToList()
                    
            },
            new BFilter {
                Id="profile",
                Title="Profile",
                Active=true,
                Content=@"<p><strong>This is some placeholder content the Profile tab's associated content.</strong> Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other <code>.nav</code>-powered navigation.</p>",
                Checkboxes= GetCheckboxes().ToList()
            }
        };
    public BSelectModel bFilterModel = new BSelectModel
    {
            Id = "filterBy",
            Name = "filterBy",
            PlaceHolder = "Filter By...",
            Options = new BSelectOption[2]        {
                new BSelectOption
                {
                    Text="By All",
                    Value="all"
                },
                new BSelectOption
                {
                    Text="By Name",
                    Value="name"
                }
        }
    };
    public BSelectModel bOrderByModel = new BSelectModel
    {
            Id = "orderBy",
            Name = "orderBy",
            PlaceHolder = "Order By...",
            Options = new BSelectOption[2]        {
                new BSelectOption
                {
                    Text="Creation Ascending",
                    Value="create"
                },
                new BSelectOption
                {
                    Text="Creation Decending",
                    Value="-create"
                }
        }
    };
    public string bFilterClassName = "custom-select";
    public static BCheckbox[] GetCheckboxes() => new BCheckbox[]
    {
        new BCheckbox {
            Id="home",
            Title="Home",
            Active=true,
            Content=@"<p><strong>This is some placeholder content the Home tab's associated content.</strong> Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other <code>.nav</code>-powered navigation.</p>"
        },
        new BCheckbox {
            Id="profile",
            Title="Profile",
            Active=false,
            Content=@"<p><strong>This is some placeholder content the Profile tab's associated content.</strong> Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other <code>.nav</code>-powered navigation.</p>"
        },
        new BCheckbox {
            Id="contact",
            Title="Contact",
            Active=false,
            Content=@"<p><strong>This is some placeholder content the Contact tab's associated content.</strong> Clicking another tab will toggle the visibility of this one for the next. The tab JavaScript swaps classes to control the content visibility and styling. You can use it with tabs, pills, and any other <code>.nav</code>-powered navigation.</p>"
        }
    };
}